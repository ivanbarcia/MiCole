@using System.Collections

@{
    var type = new ArrayList();
    var title = new ArrayList();
    var message = new ArrayList();

    if (TempData["Alerts"] != null)
    {
        var alerts = (IEnumerable)(TempData["Alerts"]);

        foreach (var alert in alerts)
        {
            //type.Add(((eDrago.DAL.Models.Alert)(alert)).Type);
            //title.Add(((eDrago.DAL.Models.Alert)(alert)).Title);
            //message.Add(((eDrago.DAL.Models.Alert)(alert)).Message);
        }
    }
}

<!DOCTYPE html>
<html lang="en">
<head>

    <!--
    Version @typeof(eDrago.MvcApplication).Assembly.GetName().Version
    Last deployed on @System.IO.File.GetLastWriteTime(typeof(eDrago.Controllers.BaseController).Assembly.Location)
    -->

    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>BASA Capital - @ViewBag.Title</title>
    <link href="@Url.Content("~/favicon.ico")" rel="shortcut icon" type="image/x-icon" />

    <!-- Add local styles, mostly for plugins css file -->
    @if (IsSectionDefined("Styles"))
    {@RenderSection("Styles", required: false)}

    @Styles.Render("~/Content/themes/base/css", "~/Content/css")
    @Styles.Render("~/font-awesome/css")
    @Styles.Render("~/Content/kendo")
    @Styles.Render("~/plugins/iziToast-master/css")
    @Styles.Render("~/plugins/dataPickerStyles")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/blockUI")
    @*@Scripts.Render("~/bundles/common")*@
    @Scripts.Render("~/bundles/kendo")
    @Scripts.Render("~/bundles/globalize")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/inspinia")
    @Scripts.Render("~/plugins/slimScroll")
    @Scripts.Render("~/plugins/iziToast-master/js")
    @Scripts.Render("~/plugins/moment")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/tradingView")

    @if (!HttpContext.Current.Request.IsLocal)
    {
        <script async>
            window.BASE_URL = '@Url.Content("~/")';
        </script>
    }
    else
    {
        <script async>
            window.BASE_URL = '';
        </script>
    }

    <script type="text/javascript" async>

        var clicked = false;
        function CheckBrowser() {
            if (clicked == false) {
                //Browser closed
            }
            else {
                //redirected
                clicked = false;
            }
        }

        function bodyUnload(e) {
            if (clicked == false)//browser is closed
            {
                //to show a dialog (uncomment to test):
                if (showADialog(e)) {
                    recordCloseTime();
                } else {
                    return false;
                }
            }
        }

        function showADialog(e) {
            var confirmationMessage = '¿Esta seguro que quiere salir?';
            //some of the older browsers require you to set the return value of the event
            (e || window.event).returnValue = confirmationMessage;
            return confirmationMessage;
        }

        function recordCloseTime() {
            $.ajax({
                url: '@Url.Action("LogOut", "Login")',
                type: "GET",
                dataType: "json",
                async: false,
                success: function () {
                    window.onbeforeunload = CloseSession;
                }
            });
        }

        $(document).ready(function () {

            if ($('#export').val() === undefined) {
                $("form").submit(function () {
                    if ($('form').valid()) {
                        $.blockUI({
                            message: $('<div class="spiner-example"><div class="sk-spinner sk-spinner-chasing-dots"><div class="sk-dot1"></div><div class="sk-dot2"></div></div></div>'),
                            css: {
                                border: 'none',
                                padding: '35px',
                                backgroundColor: '#000',
                                opacity: .5,
                                color: '#fff'
                            },
                            complete: function () {
                                $.unblockUI();
                            },
                            success: function () {
                                $.unblockUI();
                            }
                        });
                    }
                });
            };

            $.validator.methods.number = function (value, element) {
                return this.optional(element) || !isNaN(Globalize.parseFloat(value));
            }

            $.validator.methods.date = function (value, element) {
                return this.optional(element) || Globalize.parseDate(value);
            }

            Globalize.culture('@System.Threading.Thread.CurrentThread.CurrentCulture');

            $('[data-toggle="tooltip"]').tooltip();

            // MANEJO DE ALERTAS
            var type = @Html.Raw(Json.Encode(type));
            var title = @Html.Raw(Json.Encode(title));
            var message = @Html.Raw(Json.Encode(message));
            var position = 'bottomRight';

            for (var i = 0; i <= type.length; i++){
                if (type[i]) {
                    switch (type[i]) {
                        case 1:
                            iziToast.info({
                                title: title[i],
                                message: message[i],
                                position: position
                            });
                            break;
                        case 2:
                            iziToast.success({
                                title: title[i],
                                message: message[i],
                                position: position
                            });
                            break;
                        case 3:
                            iziToast.warning({
                                title: title[i],
                                message: message[i],
                                position: position
                            });
                            break;
                        case 4:
                            iziToast.error({
                                title: title[i],
                                message: message[i],
                                position: position
                            });
                            break;
                        default:
                            iziToast.show({
                                title: title[i],
                                message: message[i],
                                position: position
                            });
                            break;
                    }
                }
            }
        });

        jQuery.extend(jQuery.validator.methods, {
            range: function (value, element, param) {
                //Use the Globalization plugin to parse the value
                var val = Globalize.parseFloat(value);
                return this.optional(element) || (
                    val >= param[0] && val <= param[1]);
            }
        });

    </script>

    @* PERMITE QUE LA LISTA DE AUTOCOMPLETE ESTE EN EL MODAL Y NO "ATRAS" *@
    <style>
        .ui-autocomplete {
            z-index: 215000000 !important;
        }
    </style>
</head>

<body onunload="bodyUnload(event);" Onclick="clicked=true;">

    <!-- Top Navbar -->
    @Html.Partial("_TopNavbar")

    <div id="container">
        <div id="body">
            @RenderSection("featured", required: false)
            <section class="content-wrapper main-content clear-fix">
                @RenderBody()
            </section>
        </div>

        <!-- Footer -->
        @Html.Partial("_Footer")

    </div>

    @RenderSection("scripts", required: false)

</body>
</html>

